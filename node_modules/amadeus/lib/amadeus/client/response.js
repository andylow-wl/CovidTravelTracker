"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var JSON_CONTENT_TYPES = ['application/json', 'application/vnd.amadeus+json'];
/**
 * The response object returned for every API call.
 *
 * @param {Object} http_response the response object returned from the Node/HTTP
 *  request
 * @param {Request} request the request object used to make this API call
 *
 * @property {number} statusCode the HTTP status code for the response, if any
 * @property {string} body the raw body received from the API
 * @property {Object} result the parsed JSON received from the API
 * @property {Object} data the data attribute taken from the result
 * @property {boolean} parsed wether the raw body has been parsed into JSON
 * @property {Request} request the request object used to make this API call
 *
 */

var Response =
/*#__PURE__*/
function () {
  function Response(http_response, request) {
    _classCallCheck(this, Response);

    this.headers = http_response.headers || {};
    this.statusCode = http_response.statusCode;
    this.request = request;
    this.body = '';
    this.result = null;
    this.data = null;
    this.parsed = false;
  } // PROTECTED

  /**
   * Add a chunk received from the API to the body
   *
   * @param  {string} chunk a chunk of data
   * @protected
   */


  _createClass(Response, [{
    key: "addChunk",
    value: function addChunk(chunk) {
      this.body += chunk;
    }
    /**
     * Tries to parse parse the raw data
     * @protected
     */

  }, {
    key: "parse",
    value: function parse() {
      try {
        if (this.statusCode == 204) {
          return;
        }

        if (this.isJson()) {
          this.result = JSON.parse(this.body);
          this.data = this.result.data;
          this.parsed = true;
        } else {
          this.parsed = false;
        }
      } catch (SyntaxError) {
        this.parsed = false;
      }
    }
    /**
     * Wether this API call can be considered a success. Used to wrap the response
     * into a ResponseError
     *
     * @return {boolean}
     * @protected
     */

  }, {
    key: "success",
    value: function success() {
      if (this.statusCode == 204) {
        return true;
      }

      if (this.parsed && this.statusCode < 300) {
        return true;
      }
    } // PRIVATE

    /**
     * Tests if the content is seemingly JSON
     *
     * @return {boolean}
     * @private
     */

  }, {
    key: "isJson",
    value: function isJson() {
      return JSON_CONTENT_TYPES.indexOf(this.headers['content-type']) !== -1;
    }
  }]);

  return Response;
}();

var _default = Response;
exports["default"] = _default;
module.exports = exports["default"];
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9hbWFkZXVzL2NsaWVudC9yZXNwb25zZS5qcyJdLCJuYW1lcyI6WyJKU09OX0NPTlRFTlRfVFlQRVMiLCJSZXNwb25zZSIsImh0dHBfcmVzcG9uc2UiLCJyZXF1ZXN0IiwiaGVhZGVycyIsInN0YXR1c0NvZGUiLCJib2R5IiwicmVzdWx0IiwiZGF0YSIsInBhcnNlZCIsImNodW5rIiwiaXNKc29uIiwiSlNPTiIsInBhcnNlIiwiU3ludGF4RXJyb3IiLCJpbmRleE9mIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUEsSUFBSUEsa0JBQWtCLEdBQUcsQ0FBQyxrQkFBRCxFQUFxQiw4QkFBckIsQ0FBekI7QUFFQTs7Ozs7Ozs7Ozs7Ozs7OztJQWVNQyxROzs7QUFDSixvQkFBWUMsYUFBWixFQUEyQkMsT0FBM0IsRUFBb0M7QUFBQTs7QUFDbEMsU0FBS0MsT0FBTCxHQUFlRixhQUFhLENBQUNFLE9BQWQsSUFBeUIsRUFBeEM7QUFDQSxTQUFLQyxVQUFMLEdBQW1CSCxhQUFhLENBQUNHLFVBQWpDO0FBQ0EsU0FBS0YsT0FBTCxHQUFtQkEsT0FBbkI7QUFDQSxTQUFLRyxJQUFMLEdBQW1CLEVBQW5CO0FBQ0EsU0FBS0MsTUFBTCxHQUFtQixJQUFuQjtBQUNBLFNBQUtDLElBQUwsR0FBbUIsSUFBbkI7QUFDQSxTQUFLQyxNQUFMLEdBQW1CLEtBQW5CO0FBQ0QsRyxDQUVEOztBQUVBOzs7Ozs7Ozs7OzZCQU1TQyxLLEVBQU87QUFDZCxXQUFLSixJQUFMLElBQWFJLEtBQWI7QUFDRDtBQUdEOzs7Ozs7OzRCQUlRO0FBQ04sVUFBSTtBQUNGLFlBQUksS0FBS0wsVUFBTCxJQUFtQixHQUF2QixFQUE0QjtBQUMxQjtBQUNEOztBQUNELFlBQUksS0FBS00sTUFBTCxFQUFKLEVBQW1CO0FBQ2pCLGVBQUtKLE1BQUwsR0FBY0ssSUFBSSxDQUFDQyxLQUFMLENBQVcsS0FBS1AsSUFBaEIsQ0FBZDtBQUNBLGVBQUtFLElBQUwsR0FBWSxLQUFLRCxNQUFMLENBQVlDLElBQXhCO0FBQ0EsZUFBS0MsTUFBTCxHQUFjLElBQWQ7QUFDRCxTQUpELE1BSU87QUFDTCxlQUFLQSxNQUFMLEdBQWMsS0FBZDtBQUNEO0FBQ0YsT0FYRCxDQVdFLE9BQU9LLFdBQVAsRUFBb0I7QUFDcEIsYUFBS0wsTUFBTCxHQUFjLEtBQWQ7QUFDRDtBQUNGO0FBRUQ7Ozs7Ozs7Ozs7OEJBT1U7QUFDUixVQUFJLEtBQUtKLFVBQUwsSUFBbUIsR0FBdkIsRUFBNEI7QUFDMUIsZUFBTyxJQUFQO0FBQ0Q7O0FBQ0QsVUFBSSxLQUFLSSxNQUFMLElBQWUsS0FBS0osVUFBTCxHQUFrQixHQUFyQyxFQUEwQztBQUN4QyxlQUFPLElBQVA7QUFDRDtBQUNGLEssQ0FFRDs7QUFHQTs7Ozs7Ozs7OzZCQU1TO0FBQ1AsYUFBUUwsa0JBQWtCLENBQUNlLE9BQW5CLENBQTJCLEtBQUtYLE9BQUwsQ0FBYSxjQUFiLENBQTNCLE1BQTZELENBQUMsQ0FBdEU7QUFDRDs7Ozs7O2VBR1lILFEiLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgSlNPTl9DT05URU5UX1RZUEVTID0gWydhcHBsaWNhdGlvbi9qc29uJywgJ2FwcGxpY2F0aW9uL3ZuZC5hbWFkZXVzK2pzb24nXTtcblxuLyoqXG4gKiBUaGUgcmVzcG9uc2Ugb2JqZWN0IHJldHVybmVkIGZvciBldmVyeSBBUEkgY2FsbC5cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gaHR0cF9yZXNwb25zZSB0aGUgcmVzcG9uc2Ugb2JqZWN0IHJldHVybmVkIGZyb20gdGhlIE5vZGUvSFRUUFxuICogIHJlcXVlc3RcbiAqIEBwYXJhbSB7UmVxdWVzdH0gcmVxdWVzdCB0aGUgcmVxdWVzdCBvYmplY3QgdXNlZCB0byBtYWtlIHRoaXMgQVBJIGNhbGxcbiAqXG4gKiBAcHJvcGVydHkge251bWJlcn0gc3RhdHVzQ29kZSB0aGUgSFRUUCBzdGF0dXMgY29kZSBmb3IgdGhlIHJlc3BvbnNlLCBpZiBhbnlcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBib2R5IHRoZSByYXcgYm9keSByZWNlaXZlZCBmcm9tIHRoZSBBUElcbiAqIEBwcm9wZXJ0eSB7T2JqZWN0fSByZXN1bHQgdGhlIHBhcnNlZCBKU09OIHJlY2VpdmVkIGZyb20gdGhlIEFQSVxuICogQHByb3BlcnR5IHtPYmplY3R9IGRhdGEgdGhlIGRhdGEgYXR0cmlidXRlIHRha2VuIGZyb20gdGhlIHJlc3VsdFxuICogQHByb3BlcnR5IHtib29sZWFufSBwYXJzZWQgd2V0aGVyIHRoZSByYXcgYm9keSBoYXMgYmVlbiBwYXJzZWQgaW50byBKU09OXG4gKiBAcHJvcGVydHkge1JlcXVlc3R9IHJlcXVlc3QgdGhlIHJlcXVlc3Qgb2JqZWN0IHVzZWQgdG8gbWFrZSB0aGlzIEFQSSBjYWxsXG4gKlxuICovXG5jbGFzcyBSZXNwb25zZSB7XG4gIGNvbnN0cnVjdG9yKGh0dHBfcmVzcG9uc2UsIHJlcXVlc3QpIHtcbiAgICB0aGlzLmhlYWRlcnMgPSBodHRwX3Jlc3BvbnNlLmhlYWRlcnMgfHwge307XG4gICAgdGhpcy5zdGF0dXNDb2RlICA9IGh0dHBfcmVzcG9uc2Uuc3RhdHVzQ29kZTtcbiAgICB0aGlzLnJlcXVlc3QgICAgID0gcmVxdWVzdDtcbiAgICB0aGlzLmJvZHkgICAgICAgID0gJyc7XG4gICAgdGhpcy5yZXN1bHQgICAgICA9IG51bGw7XG4gICAgdGhpcy5kYXRhICAgICAgICA9IG51bGw7XG4gICAgdGhpcy5wYXJzZWQgICAgICA9IGZhbHNlO1xuICB9XG5cbiAgLy8gUFJPVEVDVEVEXG5cbiAgLyoqXG4gICAqIEFkZCBhIGNodW5rIHJlY2VpdmVkIGZyb20gdGhlIEFQSSB0byB0aGUgYm9keVxuICAgKlxuICAgKiBAcGFyYW0gIHtzdHJpbmd9IGNodW5rIGEgY2h1bmsgb2YgZGF0YVxuICAgKiBAcHJvdGVjdGVkXG4gICAqL1xuICBhZGRDaHVuayhjaHVuaykge1xuICAgIHRoaXMuYm9keSArPSBjaHVuaztcbiAgfVxuXG5cbiAgLyoqXG4gICAqIFRyaWVzIHRvIHBhcnNlIHBhcnNlIHRoZSByYXcgZGF0YVxuICAgKiBAcHJvdGVjdGVkXG4gICAqL1xuICBwYXJzZSgpIHtcbiAgICB0cnkge1xuICAgICAgaWYgKHRoaXMuc3RhdHVzQ29kZSA9PSAyMDQpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgaWYgKHRoaXMuaXNKc29uKCkpIHtcbiAgICAgICAgdGhpcy5yZXN1bHQgPSBKU09OLnBhcnNlKHRoaXMuYm9keSk7XG4gICAgICAgIHRoaXMuZGF0YSA9IHRoaXMucmVzdWx0LmRhdGE7XG4gICAgICAgIHRoaXMucGFyc2VkID0gdHJ1ZTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMucGFyc2VkID0gZmFsc2U7XG4gICAgICB9XG4gICAgfSBjYXRjaCAoU3ludGF4RXJyb3IpIHtcbiAgICAgIHRoaXMucGFyc2VkID0gZmFsc2U7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIFdldGhlciB0aGlzIEFQSSBjYWxsIGNhbiBiZSBjb25zaWRlcmVkIGEgc3VjY2Vzcy4gVXNlZCB0byB3cmFwIHRoZSByZXNwb25zZVxuICAgKiBpbnRvIGEgUmVzcG9uc2VFcnJvclxuICAgKlxuICAgKiBAcmV0dXJuIHtib29sZWFufVxuICAgKiBAcHJvdGVjdGVkXG4gICAqL1xuICBzdWNjZXNzKCkge1xuICAgIGlmICh0aGlzLnN0YXR1c0NvZGUgPT0gMjA0KSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgaWYgKHRoaXMucGFyc2VkICYmIHRoaXMuc3RhdHVzQ29kZSA8IDMwMCkge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICB9XG5cbiAgLy8gUFJJVkFURVxuXG5cbiAgLyoqXG4gICAqIFRlc3RzIGlmIHRoZSBjb250ZW50IGlzIHNlZW1pbmdseSBKU09OXG4gICAqXG4gICAqIEByZXR1cm4ge2Jvb2xlYW59XG4gICAqIEBwcml2YXRlXG4gICAqL1xuICBpc0pzb24oKSB7XG4gICAgcmV0dXJuIChKU09OX0NPTlRFTlRfVFlQRVMuaW5kZXhPZih0aGlzLmhlYWRlcnNbJ2NvbnRlbnQtdHlwZSddKSAhPT0gLTEpO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFJlc3BvbnNlO1xuIl19