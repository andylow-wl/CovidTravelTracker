{"remainingRequest":"/Users/dioharyadi/Desktop/BT3103_project/CovidTravelTracker/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/dioharyadi/Desktop/BT3103_project/CovidTravelTracker/src/components/EnterDestination.vue?vue&type=template&id=585cbb46","dependencies":[{"path":"/Users/dioharyadi/Desktop/BT3103_project/CovidTravelTracker/src/components/EnterDestination.vue","mtime":1649334685298},{"path":"/Users/dioharyadi/Desktop/BT3103_project/CovidTravelTracker/node_modules/cache-loader/dist/cjs.js","mtime":1649334884969},{"path":"/Users/dioharyadi/Desktop/BT3103_project/CovidTravelTracker/node_modules/babel-loader/lib/index.js","mtime":1649334887771},{"path":"/Users/dioharyadi/Desktop/BT3103_project/CovidTravelTracker/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1649334889981},{"path":"/Users/dioharyadi/Desktop/BT3103_project/CovidTravelTracker/node_modules/cache-loader/dist/cjs.js","mtime":1649334884969},{"path":"/Users/dioharyadi/Desktop/BT3103_project/CovidTravelTracker/node_modules/vue-loader-v16/dist/index.js","mtime":1649334887567}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQogICAgPGRpdiBpZD0iY29udGFpbmVyIj4NCiAgICAgICAgPGZvcm0gaWQ9InVzZXJGb3JtIj4NCiAgICAgICAgICAgIDxoMiBjbGFzcz0idGl0bGVvZkRpdiI+RW50ZXIgeW91ciBEZXN0aW5hdGlvbiBDb3VudHJ5KENsaWNrIG9uIHRoZSBzZWxlY3RlZCBjb3VudHJ5KTwvaDI+DQogICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtbGkiPg0KICAgICAgICAgICAgICAgIDxTZWFyY2hBdXRvY29tcGxldGUgQHNlbGVjdGVkPSJjb3VudHJ5VG9Db2RlIi8+DQogICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgPC9mb3JtPg0KICAgICAgICA8cD5EZXN0aW5hdGlvbiBDb3VudHJ5OiB7e3RoaXMuZGVzdENvdW50cnl9fTwvcD4NCiAgICAgICAgPHA+IERpc2Vhc2UgUmlzayBMZXZlbDoge3t0aGlzLmRpc2Vhc2VMZXZlbH19IGFzIG9mIHt7dGhpcy5kaXNlYXNlRGF0ZX19IDwvcD4NCiAgICAgICAgPHA+IE51bWJlciBvZiBhY3RpdmUgY2FzZXMgOiB7e3RoaXMuY2FzZXN9fSBhcyBvZiB7e3RoaXMuY2FzZURhdGV9fTwvcD4NCiAgICAgICAgPHA+IFBlcmNlbnRhZ2UgZnVsbHkgdmFjY2luYXRlZCA6IHt7dGhpcy5kb3NlfX0lIGFzIG9mIHt7dGhpcy5kb3NlRGF0ZX19IDwvcD4NCiAgICAgICAgPHA+IFRoZSBob3RzcG90IGFyZWFzIGFyZSA6IHt7dGhpcy5ob3RTcG90fX0gPC9wPg0KICAgICAgICA8cD4gU3VtbWFyeSA6IHt7dGhpcy5zdW1tYXJ5fX0gPC9wPg0KICAgICAgICA8cD4gVmFjY2luYXRpb24gUG9saWN5IDoge3t0aGlzLnZhY2NpbmV9fSA8L3A+DQogICAgICAgIDxwPiBEb2N1bWVudHMgcmVxdWlyZWQgOiB7e3RoaXMuZG9jdW1lbnR9fSA8L3A+DQogICAgICAgIDxwPiBQcmUgRmxpZ2h0IHRlc3RpbmcgcmVxdWlyZWQgOiB7e3RoaXMudGVzdGluZ319IDwvcD4NCiAgICAgICAgPHA+IEVudHJ5IFJlc3RyaWN0aW9ucyA6IHt7dGhpcy5lbnRyeVJlc3RyaWN0aW9ufX0gPC9wPg0KICAgICAgICA8cD4gRXhpdCBSZXN0cmljdGlvbnMgOiB7e3RoaXMuZXhpdFJlc3RyaWN0aW9ufX0gPC9wPg0KICAgICAgICA8cD4gTWFzayBQb2xpY3kgOiB7e3RoaXMubWFza319IDwvcD4NCiAgICAgICAgPHA+IFF1YXJhbnRpbmUgUG9saWN5IDoge3t0aGlzLnF1YXJhbnRpbmV9fSA8L3A+DQogICAgICAgIDxwPiBUcmFjaW5nIEFwcGxpY2F0aW9uIFJlcXVpcmVtZW50IDp7e3RoaXMudHJhY2luZ319IDwvcD4NCiAgICAgICAgPENoYXJ0cyA6Y291bnRyeVByb3AgPSAiZGVzdENvdW50cnkiLz4NCiAgICA8L2Rpdj4NCiAgICANCg=="},{"version":3,"sources":["/Users/dioharyadi/Desktop/BT3103_project/CovidTravelTracker/src/components/EnterDestination.vue"],"names":[],"mappings":";IACI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACf,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACf,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACxF,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAClD,CAAC,CAAC,CAAC,CAAC,CAAC;QACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/C,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5E,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACthD,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAClC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC7C,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC9C,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACtD,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACtD,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACpD,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACnC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/C,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACzD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACzC,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/Users/dioharyadi/Desktop/BT3103_project/CovidTravelTracker/src/components/EnterDestination.vue","sourceRoot":"","sourcesContent":["<template>\r\n    <div id=\"container\">\r\n        <form id=\"userForm\">\r\n            <h2 class=\"titleofDiv\">Enter your Destination Country(Click on the selected country)</h2>\r\n            <div class=\"formli\">\r\n                <SearchAutocomplete @selected=\"countryToCode\"/>\r\n            </div>\r\n        </form>\r\n        <p>Destination Country: {{this.destCountry}}</p>\r\n        <p> Disease Risk Level: {{this.diseaseLevel}} as of {{this.diseaseDate}} </p>\r\n        <p> Number of active cases : {{this.cases}} as of {{this.caseDate}}</p>\r\n        <p> Percentage fully vaccinated : {{this.dose}}% as of {{this.doseDate}} </p>\r\n        <p> The hotspot areas are : {{this.hotSpot}} </p>\r\n        <p> Summary : {{this.summary}} </p>\r\n        <p> Vaccination Policy : {{this.vaccine}} </p>\r\n        <p> Documents required : {{this.document}} </p>\r\n        <p> Pre Flight testing required : {{this.testing}} </p>\r\n        <p> Entry Restrictions : {{this.entryRestriction}} </p>\r\n        <p> Exit Restrictions : {{this.exitRestriction}} </p>\r\n        <p> Mask Policy : {{this.mask}} </p>\r\n        <p> Quarantine Policy : {{this.quarantine}} </p>\r\n        <p> Tracing Application Requirement :{{this.tracing}} </p>\r\n        <Charts :countryProp = \"destCountry\"/>\r\n    </div>\r\n    \r\n</template>\r\n\r\n<script>\r\n    console.log(\"In EnterDestination\")\r\n    import SearchAutocomplete from '@/components/SearchAutocomplete.vue'\r\n    import Charts from '@/components/Charts.vue'\r\n    export default {\r\n        name: 'EnterDestination',\r\n        \r\n        components: {\r\n            SearchAutocomplete,\r\n            Charts\r\n        },\r\n        data() {\r\n            return {\r\n                countryCode:\"\",\r\n                destCountry:\"\",\r\n                diseaseLevel:\"\",\r\n                diseaseDate:\"\",\r\n                cases:\"\",\r\n                caseDate:\"\",\r\n                summary:\"\",\r\n\r\n            }\r\n        },\r\n        methods: {\r\n            async countryToCode(destCountry) {\r\n                var country_code_dict = {\r\n                \"Australia\": \"AU\",\r\n                \"China\":\"CN\",\r\n                \"Indonesia\": \"ID\",\r\n                \"Japan\" :\"JP\",\r\n                \"Korea\": \"KR\",\r\n                \"Malaysia\": \"MY\",\r\n                \"United States\": \"US\", \r\n            }  \r\n                 try {\r\n                    this.countryCode = country_code_dict[destCountry]\r\n                    this.destCountry = destCountry\r\n                    console.log(this.countryCode)\r\n                } catch {\r\n                    this.countryCode = \"error\"\r\n                }\r\n\r\n                const Amadeus = require(\"amadeus\")\r\n                const amadeus = new Amadeus({\r\n                clientId: 'uDGFRwqjN9TMyagU3pwL4Yv53iUZzXN3',\r\n                clientSecret: 'FjthFeiXCnw4KX9D'\r\n                });\r\n                const query = {\r\n                    countryCode: this.countryCode\r\n                };\r\n                console.log(query);\r\n            \r\n                amadeus.client.get('/v1/duty-of-care/diseases/covid19-area-report', query).then(\r\n                    x => {\r\n                        console.log(x.data)\r\n                        this.diseaseLevel = x.data.diseaseInfection.level\r\n                        this.diseaseDate = x.data.diseaseInfection.date \r\n                        this.cases = x.data.diseaseCases.confirmed \r\n                        this.caseDate = x.data.diseaseCases.date\r\n                        this.hotSpot = x.data.hotspots.replaceAll(\"<p>\",\"\").replaceAll(\"</p>\",\"\") \r\n                        this.dose = x.data.areaVaccinated[1].percentage\r\n                        this.doseDate = x.data.areaVaccinated[1].date\r\n                        this.summary = x.data.summary.replaceAll(\"<p>\",\"\").replaceAll(\"</p>\",\"\") \r\n                        this.document = x.data.areaAccessRestriction.declarationDocuments.text.replaceAll(\"<p>\",\"\").replaceAll(\"</p>\",\"\") \r\n                        //this.documentDate =   x.data.areaAccessRestriction.declarationDocuments.date \r\n                        this.testing =  x.data.areaAccessRestriction.diseaseTesting.text.replaceAll(\"<p>\",\"\").replaceAll(\"</p>\",\"\").replaceAll(\"<strong>Before travel</strong>\",\"\")\r\n                        //this.testingDate =  x.data.areaAccessRestriction.diseaseTesting.date \r\n                        this.vaccine =  x.data.areaAccessRestriction.diseaseVaccination.qualifiedVaccines\r\n                        //this.vaccineDate =  x.data.areaAccessRestriction.diseaseVaccination.date \r\n                        this.entryRestriction =  x.data.areaAccessRestriction.entry.text.replaceAll(\"<p>\",\"\").replaceAll(\"</p>\",\"\") \r\n                        //this.entryRestrictionDate =  x.data.areaAccessRestriction.entry.date \r\n                        this.exitRestriction =  x.data.areaAccessRestriction.exit.text.replaceAll(\"<p>\",\"\").replaceAll(\"</p>\",\"\") \r\n                        //this.exitRestrictionDate =  x.data.areaAccessRestriction.exit.date \r\n                        this.mask =  x.data.areaAccessRestriction.mask.text.replaceAll(\"<p>\",\"\").replaceAll(\"</p>\",\"\") \r\n                        //this.maskDate = x.data.areaAccessRestriction.mask.date \r\n                        this.quarantine =  x.data.areaAccessRestriction.quarantineModality.text.replaceAll(\"<p>\",\"\").replaceAll(\"</p>\",\"\") \r\n                        this.tracing =  x.data.areaAccessRestriction.tracingApplication.text.replaceAll(\"<p>\",\"\").replaceAll(\"</p>\",\"\") \r\n\r\n\r\n                        \r\n\r\n                        \r\n                        \r\n                        \r\n        \r\n                        \r\n                        });\r\n                \r\n            },\r\n        \r\n        }\r\n        \r\n    }\r\n</script>\r\n\r\n<style>\r\n    h2{\r\n        background-color: rgb(129,184,99);\r\n    }\r\n    .formli{\r\n        display: inline-block;\r\n        text-align: right;\r\n    }\r\n    form {\r\n        text-align: center;\r\n        align-items: center;\r\n        margin: auto;\r\n    }\r\n    .search{\r\n        text-align: center;\r\n    }\r\n    #searchButton:hover {\r\n        background-color: aquamarine;\r\n        font-weight: bolder;\r\n    }\r\n</style>"]}]}