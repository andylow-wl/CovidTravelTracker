{"remainingRequest":"C:\\Users\\zhong\\Desktop\\BT3103\\Covid Tracker\\CovidTravelTracker\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\zhong\\Desktop\\BT3103\\Covid Tracker\\CovidTravelTracker\\src\\components\\AddDataFS.vue?vue&type=template&id=097c99f8","dependencies":[{"path":"C:\\Users\\zhong\\Desktop\\BT3103\\Covid Tracker\\CovidTravelTracker\\src\\components\\AddDataFS.vue","mtime":1649536577428},{"path":"C:\\Users\\zhong\\Desktop\\BT3103\\Covid Tracker\\CovidTravelTracker\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1649536563251},{"path":"C:\\Users\\zhong\\Desktop\\BT3103\\Covid Tracker\\CovidTravelTracker\\node_modules\\babel-loader\\lib\\index.js","mtime":1649536563032},{"path":"C:\\Users\\zhong\\Desktop\\BT3103\\Covid Tracker\\CovidTravelTracker\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1649536576810},{"path":"C:\\Users\\zhong\\Desktop\\BT3103\\Covid Tracker\\CovidTravelTracker\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1649536563251},{"path":"C:\\Users\\zhong\\Desktop\\BT3103\\Covid Tracker\\CovidTravelTracker\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1649536576804}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQogICAgPCEtLTxidXR0b24gQGNsaWNrPSJmZXRjaENvdmlkQ2FzZSgpIj5VcGRhdGUgQ2hhcnRzPC9idXR0b24+LS0+DQogICAgPGRpdj48L2Rpdj4NCg=="},{"version":3,"sources":["C:\\Users\\zhong\\Desktop\\BT3103\\Covid Tracker\\CovidTravelTracker\\src\\components\\AddDataFS.vue"],"names":[],"mappings":";IACI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC","file":"C:/Users/zhong/Desktop/BT3103/Covid Tracker/CovidTravelTracker/src/components/AddDataFS.vue","sourceRoot":"","sourcesContent":["<template>\r\n    <!--<button @click=\"fetchCovidCase()\">Update Charts</button>-->\r\n    <div></div>\r\n</template>\r\n<script>\r\nimport axios from 'axios'\r\nimport firebaseApp from '../firebase.js';\r\nimport { getFirestore } from \"firebase/firestore\";\r\nimport { doc, setDoc } from \"firebase/firestore\";\r\nconst db = getFirestore(firebaseApp);\r\nexport default {\r\n    name : 'AddDataFS',\r\n    components : {},\r\n    data() {\r\n        return  {\r\n            AU : '',\r\n            CN : '',\r\n            ID : '',\r\n            JP : '',\r\n            KR : '',\r\n            MY : '',\r\n            US : '',\r\n        }\r\n    },\r\n    methods : {\r\n        async  fetchCovidCase() {\r\n            console.log(\"Working\")\r\n            var enddateObj = new Date()\r\n            enddateObj.setHours(8,0,0,0)\r\n            var startdateObj = new Date(new Date().setDate(enddateObj.getDate()-30))\r\n            startdateObj.setHours(8,0,0,0)\r\n            var enddate = enddateObj.toISOString();\r\n            var startdate = startdateObj.toISOString();\r\n            console.log(startdate, enddate)\r\n            await axios.get('https://api.covid19api.com/total/country/' + 'AU' + '/status/confirmed?from=' + startdate + '&to=' + enddate).then(response => (this.AU = response))\r\n            this.AU.data.forEach(data => setDoc(doc(db, \"Australia\", data[\"Date\"]), {\r\n                Country: \"Australia\", date: data[\"Date\"], Cases: data[\"Cases\"]\r\n            }))\r\n            // const start = startdateObj;\r\n            // const end = enddateObj;\r\n            // let loop = new Date(start);\r\n            // while (loop <= end) {\r\n            //     console.log(loop.toISOString())\r\n            //     var loopISO = loop.toISOString()\r\n            //     this.AU_nc[loopISO] = 0\r\n            //     let newDate = loop.setDate(loop.getDate() + 1);\r\n            //     loop = new Date(newDate);\r\n            // }\r\n            // this.AU_nc[startdate] = this.AU.data[1]['Cases'] - this.AU.data[0]['Cases']\r\n            // this.AU_nc[enddate] = this.AU.data[30]['Cases'] - this.AU.data[29]['Cases']\r\n            // console.log(this.AU_nc)\r\n            await axios.get('https://api.covid19api.com/total/country/' + 'CN' + '/status/confirmed?from=' + startdate + '&to=' + enddate).then(response => (this.CN = response))\r\n            this.CN.data.forEach(data => setDoc(doc(db, \"China\", data[\"Date\"]), {\r\n                Country: \"China\", date: data[\"Date\"], Cases: data[\"Cases\"]\r\n            }))\r\n            await axios.get('https://api.covid19api.com/total/country/' + 'ID' + '/status/confirmed?from=' + startdate + '&to=' + enddate).then(response => (this.ID = response))\r\n            this.ID.data.forEach(data => setDoc(doc(db, \"Indonesia\", data[\"Date\"]), {\r\n                Country: \"Indonesia\", date: data[\"Date\"], Cases: data[\"Cases\"]\r\n            }))      \r\n            await axios.get('https://api.covid19api.com/total/country/' + 'JP' + '/status/confirmed?from=' + startdate + '&to=' + enddate).then(response => (this.JP = response))\r\n            this.JP.data.forEach(data => setDoc(doc(db, \"Japan\", data[\"Date\"]), {\r\n                Country: \"Japan\", date: data[\"Date\"], Cases: data[\"Cases\"]\r\n            }))            \r\n            await axios.get('https://api.covid19api.com/total/country/' + 'KR' + '/status/confirmed?from=' + startdate + '&to=' + enddate).then(response => (this.KR = response))\r\n            this.KR.data.forEach(data => setDoc(doc(db, \"Korea\", data[\"Date\"]), {\r\n                Country: \"South Korea\", date: data[\"Date\"], Cases: data[\"Cases\"]\r\n            }))            \r\n            await axios.get('https://api.covid19api.com/total/country/' + 'MY' + '/status/confirmed?from=' + startdate + '&to=' + enddate).then(response => (this.MY = response))\r\n            this.MY.data.forEach(data => setDoc(doc(db, \"Malaysia\", data[\"Date\"]), {\r\n                Country: \"Malaysia\", date: data[\"Date\"], Cases: data[\"Cases\"]\r\n            }))            \r\n            await axios.get('https://api.covid19api.com/total/country/' + 'US' + '/status/confirmed?from=' + startdate + '&to=' + enddate).then(response => (this.US = response))\r\n            this.US.data.forEach(data => setDoc(doc(db, \"United States\", data[\"Date\"]), {\r\n                Country: \"USA\", date: data[\"Date\"], Cases: data[\"Cases\"]\r\n            }))\r\n        }\r\n    },\r\n    mounted() {\r\n    },\r\n}\r\n</script>"]}]}