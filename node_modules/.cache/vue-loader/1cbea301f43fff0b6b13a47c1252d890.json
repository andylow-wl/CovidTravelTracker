{"remainingRequest":"/Users/dioharyadi/Desktop/BT3103_project/CovidTravelTracker/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/dioharyadi/Desktop/BT3103_project/CovidTravelTracker/src/components/Charts.vue?vue&type=style&index=0&id=57799805&scoped=true&lang=css","dependencies":[{"path":"/Users/dioharyadi/Desktop/BT3103_project/CovidTravelTracker/src/components/Charts.vue","mtime":1649334685298},{"path":"/Users/dioharyadi/Desktop/BT3103_project/CovidTravelTracker/node_modules/css-loader/dist/cjs.js","mtime":1649334886689},{"path":"/Users/dioharyadi/Desktop/BT3103_project/CovidTravelTracker/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1649334889849},{"path":"/Users/dioharyadi/Desktop/BT3103_project/CovidTravelTracker/node_modules/postcss-loader/src/index.js","mtime":1649334887640},{"path":"/Users/dioharyadi/Desktop/BT3103_project/CovidTravelTracker/node_modules/cache-loader/dist/cjs.js","mtime":1649334884969},{"path":"/Users/dioharyadi/Desktop/BT3103_project/CovidTravelTracker/node_modules/vue-loader-v16/dist/index.js","mtime":1649334887567}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgICAudXNlcnsKICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgICB9Cg=="},{"version":3,"sources":["/Users/dioharyadi/Desktop/BT3103_project/CovidTravelTracker/src/components/Charts.vue"],"names":[],"mappings":";IAmGI,CAAC,CAAC,CAAC,CAAC,CAAC;QACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACzB","file":"/Users/dioharyadi/Desktop/BT3103_project/CovidTravelTracker/src/components/Charts.vue","sourceRoot":"","sourcesContent":["<template>\n    <div>\n        <p>{{country}}</p>\n    <select v-model=\"selected\">\n    <option value=\"\">Please select time period</option>\n    <option>Last 30 Days</option>\n    <option>Last 2 Weeks</option>\n    <option>Last Week</option>\n    </select>,<br><br>\n    <span>Selected: {{ selected }}</span>\n    <div v-if=\"selected=='Last 30 Days'\">\n    <line-chart class =\"user\" width=600px :min= null :data= \"chartdata\"></line-chart>\n    </div>\n\n    <div v-if=\"selected=='Last 2 Weeks'\">\n    <line-chart class =\"user\" width=600px :min= null :data= \"twoWeekData\"></line-chart>\n    </div>\n\n    <div v-if=\"selected=='Last Week'\">\n    <line-chart class =\"user\" width=600px :min= null :data= \"weekData\"></line-chart>\n    </div>\n\n    </div>\n</template>\n<script>\nimport firebaseApp from '../firebase.js';\nimport {getFirestore} from \"firebase/firestore\";\nimport {collection, getDocs} from \"firebase/firestore\";\nconst db = getFirestore(firebaseApp);\n\n\nexport default {\n\n    name:'Charts',\n    props: {\n       countryProp: String\n    },\n    data(){\n        return{\n            chartdata: {},\n            weekData: {},\n            twoWeekData: {},\n            selected: \"\",\n            country: this.countryProp\n\n        }\n    },\n\n    mounted(){\n        const self = this\n \n        console.log(\"country:\"  + self.country)\n\n\n},\n    watch: {\n        \n        countryProp: async function(x) {\n            const self = this\n            console.log(\"prop changed:\" + x)\n            this.country = x\n            let obj = new Object();\n            //change \"Australia\" to self.country\n            let z = await getDocs(collection(db, x));\n            z.forEach((d) => obj[d.data().date] = d.data().Cases);         \n            let date = []\n            let cases = []\n            let casesDaily = []\n            z.forEach((d) => date.push(d.data().date))\n            z.forEach((d) => cases.push(d.data().Cases))\n            console.log(\"cases\")\n            console.log(cases)\n            for (let i = 1; i < cases.length; i++) {\n                casesDaily[i] = cases[i] - cases[i - 1]\n            }\n            let monthData = new Object();\n            for (let i = 1; i < cases.length; i++) {\n                monthData[date[i]] = casesDaily[i]\n            }\n            self.chartdata = monthData\n\n            let weekData = new Object();\n            for (let i = 7; i > 0; i--){\n                weekData[date[date.length-i]] = casesDaily[casesDaily.length-i]\n            }\n            let twoWeekData = new Object();\n            for (let i = 14; i > 0; i--){\n                twoWeekData[date[date.length-i]] = casesDaily[casesDaily.length-i]\n            }\n            self.weekData = weekData\n            self.twoWeekData = twoWeekData\n\n        }\n    }\n\n    \n}\n</script>\n<style scoped>\n    .user{\n        display: inline-block;\n    }\n</style>"]}]}