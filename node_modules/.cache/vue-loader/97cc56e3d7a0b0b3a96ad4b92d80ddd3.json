{"remainingRequest":"/Users/dioharyadi/Desktop/BT3103_project/CovidTravelTracker/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/dioharyadi/Desktop/BT3103_project/CovidTravelTracker/src/components/test.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/dioharyadi/Desktop/BT3103_project/CovidTravelTracker/src/components/test.vue","mtime":1648910352659},{"path":"/Users/dioharyadi/Desktop/BT3103_project/CovidTravelTracker/node_modules/cache-loader/dist/cjs.js","mtime":1648896701259},{"path":"/Users/dioharyadi/Desktop/BT3103_project/CovidTravelTracker/node_modules/babel-loader/lib/index.js","mtime":1648896703400},{"path":"/Users/dioharyadi/Desktop/BT3103_project/CovidTravelTracker/node_modules/cache-loader/dist/cjs.js","mtime":1648896701259},{"path":"/Users/dioharyadi/Desktop/BT3103_project/CovidTravelTracker/node_modules/vue-loader-v16/dist/index.js","mtime":1648896703237}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWUgOiAndGVzdCcsCiAgICBjb21wb25lbnRzIDoge30sCiAgICBkYXRhKCkgewogICAgICAgIHJldHVybiAgewogICAgICAgICAgICBBVTogW10sCiAgICAgICAgICAgIENIOiBbXSwKICAgICAgICAgICAgSUQ6IFtdLAogICAgICAgICAgICBKUDogW10sCiAgICAgICAgICAgIEtSOiBbXSwKICAgICAgICAgICAgTVk6IFtdLAogICAgICAgICAgICBVUzogW10sCiAgICAgICAgfQogICAgfSwKICAgIG1ldGhvZHMgOiB7CiAgICAgICAgYXN5bmMgZmV0Y2hDb3ZpZENhc2UoY291bnRyeSkgewogICAgICAgICAgICB2YXIgZW5kZGF0ZU9iaiA9IG5ldyBEYXRlKCkKICAgICAgICAgICAgdmFyIHN0YXJ0ZGF0ZU9iaiA9IG5ldyBEYXRlKG5ldyBEYXRlKCkuc2V0RGF0ZShlbmRkYXRlT2JqLmdldERhdGUoKS0zMCkpOwogICAgICAgICAgICB2YXIgZW5kZGF0ZSA9IGVuZGRhdGVPYmoudG9JU09TdHJpbmcoKTsKICAgICAgICAgICAgdmFyIHN0YXJ0ZGF0ZSA9IHN0YXJ0ZGF0ZU9iai50b0lTT1N0cmluZygpOwogICAgICAgICAgICBlbmRkYXRlID0gZW5kZGF0ZS5zdWJzdHJpbmcoMCwgZW5kZGF0ZS5pbmRleE9mKCdUJykrMSk7CiAgICAgICAgICAgIHN0YXJ0ZGF0ZSA9IHN0YXJ0ZGF0ZS5zdWJzdHJpbmcoMCwgc3RhcnRkYXRlLmluZGV4T2YoJ1QnKSsxKTsKICAgICAgICAgICAgZW5kZGF0ZSArPSAiMDA6MDA6MDBaIgogICAgICAgICAgICBzdGFydGRhdGUgKz0gIjAwOjAwOjAwWiIKICAgICAgICAgICAgY29uc29sZS5sb2coc3RhcnRkYXRlLCBlbmRkYXRlKQogICAgICAgICAgICBmZXRjaCgnaHR0cHM6Ly9hcGkuY292aWQxOWFwaS5jb20vdG90YWwvY291bnRyeS8nICsgY291bnRyeSArICcvc3RhdHVzL2NvbmZpcm1lZD9mcm9tPScgKyBzdGFydGRhdGUgKyAnJnRvPScgKyBlbmRkYXRlKS50aGVuKHJlc3BvbnNlID0+IHJlc3BvbnNlLmpzb24oKSkudGhlbihkYXRhID0+IHRoaXMuQVUpID0gZGF0YSkpOwogICAgICAgIH0KICAgIH0sCiAgICBhc3luYyBjcmVhdGVkKCkgewogICAgICAgIGNvbnN0IGRhdGFBdSA9IGF3YWl0IHRoaXMuZmV0Y2hDb3ZpZENhc2UoImF1IikKICAgICAgICBjb25zdCBkYXRhQ2ggPSBhd2FpdCB0aGlzLmZldGNoQ292aWRDYXNlKCJjbiIpCiAgICAgICAgY29uc3QgZGF0YUlkID0gYXdhaXQgdGhpcy5mZXRjaENvdmlkQ2FzZSgiaWQiKQogICAgICAgIGNvbnN0IGRhdGFKcCA9IGF3YWl0IHRoaXMuZmV0Y2hDb3ZpZENhc2UoImpwIikKICAgICAgICBjb25zdCBkYXRhS3IgPSBhd2FpdCB0aGlzLmZldGNoQ292aWRDYXNlKCJrciIpCiAgICAgICAgY29uc3QgZGF0YU15ID0gYXdhaXQgdGhpcy5mZXRjaENvdmlkQ2FzZSgibXkiKQogICAgICAgIGNvbnN0IGRhdGFVcyA9IGF3YWl0IHRoaXMuZmV0Y2hDb3ZpZENhc2UoInVzIikKCiAgICAgICAgY29uc29sZS5sb2coZGF0YUF1LCBkYXRhQ2gsIGRhdGFJZCwgZGF0YUpwLCBkYXRhS3IsIGRhdGFNeSwgZGF0YVVzKQogICAgfSwKCn0K"},{"version":3,"sources":["/Users/dioharyadi/Desktop/BT3103_project/CovidTravelTracker/src/components/test.vue"],"names":[],"mappings":";AAaA,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACX,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IACf,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;QACH,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG;YACJ,CAAC,CAAC,EAAE,CAAC,CAAC;YACN,CAAC,CAAC,EAAE,CAAC,CAAC;YACN,CAAC,CAAC,EAAE,CAAC,CAAC;YACN,CAAC,CAAC,EAAE,CAAC,CAAC;YACN,CAAC,CAAC,EAAE,CAAC,CAAC;YACN,CAAC,CAAC,EAAE,CAAC,CAAC;YACN,CAAC,CAAC,EAAE,CAAC,CAAC;QACV;IACJ,CAAC;IACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE;QACN,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;YAC1B,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;YAC1B,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACxE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC1C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACtD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC5D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC5L;IACJ,CAAC;IACD,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;QACZ,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7C,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7C,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7C,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7C,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7C,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7C,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;QAE7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACtE,CAAC;;AAEL","file":"/Users/dioharyadi/Desktop/BT3103_project/CovidTravelTracker/src/components/test.vue","sourceRoot":"","sourcesContent":["<template>\n    <h1>Add for     \"Australia\": \"AU\",\n                \"China\":\"CN\",\n                \"Indonesia\": \"ID\",\n                \"Japan\" :\"JP\",\n                \"Korea\": \"KR\",\n                \"Malaysia\": \"MY\",\n                \"United States\": \"US\", \n    </h1>\n    <button v-on:click=\"fetchCovidCase\">get data</button>\n    <div>{{AU}}</div>\n</template>\n<script>\nexport default {\n    name : 'test',\n    components : {},\n    data() {\n        return  {\n            AU: [],\n            CH: [],\n            ID: [],\n            JP: [],\n            KR: [],\n            MY: [],\n            US: [],\n        }\n    },\n    methods : {\n        async fetchCovidCase(country) {\n            var enddateObj = new Date()\n            var startdateObj = new Date(new Date().setDate(enddateObj.getDate()-30));\n            var enddate = enddateObj.toISOString();\n            var startdate = startdateObj.toISOString();\n            enddate = enddate.substring(0, enddate.indexOf('T')+1);\n            startdate = startdate.substring(0, startdate.indexOf('T')+1);\n            enddate += \"00:00:00Z\"\n            startdate += \"00:00:00Z\"\n            console.log(startdate, enddate)\n            fetch('https://api.covid19api.com/total/country/' + country + '/status/confirmed?from=' + startdate + '&to=' + enddate).then(response => response.json()).then(data => this.AU) = data));\n        }\n    },\n    async created() {\n        const dataAu = await this.fetchCovidCase(\"au\")\n        const dataCh = await this.fetchCovidCase(\"cn\")\n        const dataId = await this.fetchCovidCase(\"id\")\n        const dataJp = await this.fetchCovidCase(\"jp\")\n        const dataKr = await this.fetchCovidCase(\"kr\")\n        const dataMy = await this.fetchCovidCase(\"my\")\n        const dataUs = await this.fetchCovidCase(\"us\")\n\n        console.log(dataAu, dataCh, dataId, dataJp, dataKr, dataMy, dataUs)\n    },\n\n}\n</script>\n"]}]}