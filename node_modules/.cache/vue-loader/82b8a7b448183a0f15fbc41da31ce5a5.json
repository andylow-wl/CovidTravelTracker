{"remainingRequest":"C:\\Users\\david\\Desktop\\git 1\\CovidTravelTracker\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\david\\Desktop\\git 1\\CovidTravelTracker\\src\\components\\AddDataFS.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\david\\Desktop\\git 1\\CovidTravelTracker\\src\\components\\AddDataFS.vue","mtime":1648925631423},{"path":"C:\\Users\\david\\Desktop\\git 1\\CovidTravelTracker\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648925589912},{"path":"C:\\Users\\david\\Desktop\\git 1\\CovidTravelTracker\\node_modules\\babel-loader\\lib\\index.js","mtime":1648925588968},{"path":"C:\\Users\\david\\Desktop\\git 1\\CovidTravelTracker\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648925589912},{"path":"C:\\Users\\david\\Desktop\\git 1\\CovidTravelTracker\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1648925628654}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnDQppbXBvcnQgZmlyZWJhc2VBcHAgZnJvbSAnLi4vZmlyZWJhc2UuanMnOw0KaW1wb3J0IHtnZXRGaXJlc3RvcmV9IGZyb20gImZpcmViYXNlL2ZpcmVzdG9yZSI7DQppbXBvcnQge2RvYywgc2V0RG9jfSBmcm9tICJmaXJlYmFzZS9maXJlc3RvcmUiOw0KY29uc3QgZGIgPSBnZXRGaXJlc3RvcmUoZmlyZWJhc2VBcHApOw0KDQoNCmV4cG9ydCBkZWZhdWx0IHsNCiAgICBuYW1lIDogJ0FkZERhdGFGUycsDQogICAgY29tcG9uZW50cyA6IHt9LA0KICAgIGRhdGEoKSB7DQogICAgICAgIHJldHVybiAgew0KICAgICAgICAgICAgQVUgOiAnJywNCiAgICAgICAgICAgIENOIDogJycsDQogICAgICAgICAgICBJRCA6ICcnLA0KICAgICAgICAgICAgSlAgOiAnJywNCiAgICAgICAgICAgIEtSIDogJycsDQogICAgICAgICAgICBNWSA6ICcnLA0KICAgICAgICAgICAgVVMgOiAnJywNCiAgICAgICAgfQ0KICAgIH0sDQogICAgbWV0aG9kcyA6IHsNCiAgICAgICAgYXN5bmMgIGZldGNoQ292aWRDYXNlKCkgew0KICAgICAgICAgICAgY29uc29sZS5sb2coIldvcmtpbmciKQ0KICAgICAgICAgICAgdmFyIGVuZGRhdGVPYmogPSBuZXcgRGF0ZSgpDQogICAgICAgICAgICB2YXIgc3RhcnRkYXRlT2JqID0gbmV3IERhdGUobmV3IERhdGUoKS5zZXREYXRlKGVuZGRhdGVPYmouZ2V0RGF0ZSgpLTMwKSk7DQogICAgICAgICAgICB2YXIgZW5kZGF0ZSA9IGVuZGRhdGVPYmoudG9JU09TdHJpbmcoKTsNCiAgICAgICAgICAgIHZhciBzdGFydGRhdGUgPSBzdGFydGRhdGVPYmoudG9JU09TdHJpbmcoKTsNCiAgICAgICAgICAgIGVuZGRhdGUgPSBlbmRkYXRlLnN1YnN0cmluZygwLCBlbmRkYXRlLmluZGV4T2YoJ1QnKSsxKTsNCiAgICAgICAgICAgIHN0YXJ0ZGF0ZSA9IHN0YXJ0ZGF0ZS5zdWJzdHJpbmcoMCwgc3RhcnRkYXRlLmluZGV4T2YoJ1QnKSsxKTsNCiAgICAgICAgICAgIGVuZGRhdGUgKz0gIjAwOjAwOjAwWiINCiAgICAgICAgICAgIHN0YXJ0ZGF0ZSArPSAiMDA6MDA6MDBaIg0KICAgICAgICAgICAgY29uc29sZS5sb2coc3RhcnRkYXRlLCBlbmRkYXRlKQ0KICAgICAgICAgICAgYXdhaXQgYXhpb3MuZ2V0KCdodHRwczovL2FwaS5jb3ZpZDE5YXBpLmNvbS90b3RhbC9jb3VudHJ5LycgKyAnQVUnICsgJy9zdGF0dXMvY29uZmlybWVkP2Zyb209JyArIHN0YXJ0ZGF0ZSArICcmdG89JyArIGVuZGRhdGUpLnRoZW4ocmVzcG9uc2UgPT4gKHRoaXMuQVUgPSByZXNwb25zZSkpDQogICAgICAgICAgICBhd2FpdCBheGlvcy5nZXQoJ2h0dHBzOi8vYXBpLmNvdmlkMTlhcGkuY29tL3RvdGFsL2NvdW50cnkvJyArICdDTicgKyAnL3N0YXR1cy9jb25maXJtZWQ/ZnJvbT0nICsgc3RhcnRkYXRlICsgJyZ0bz0nICsgZW5kZGF0ZSkudGhlbihyZXNwb25zZSA9PiAodGhpcy5DTiA9IHJlc3BvbnNlKSkNCiAgICAgICAgICAgIHRoaXMuQ04uZGF0YS5mb3JFYWNoKGRhdGEgPT4gc2V0RG9jKGRvYyhkYiwgIkNoaW5hIiwgZGF0YVsiRGF0ZSJdKSwgew0KICAgICAgICAgICAgICAgIENvdW50cnk6ICJDaGluYSIsIGRhdGU6IGRhdGFbIkRhdGUiXSwgQ2FzZXM6IGRhdGFbIkNhc2VzIl0NCiAgICAgICAgICAgIH0pKQ0KICAgICAgICAgICAgYXdhaXQgYXhpb3MuZ2V0KCdodHRwczovL2FwaS5jb3ZpZDE5YXBpLmNvbS90b3RhbC9jb3VudHJ5LycgKyAnSUQnICsgJy9zdGF0dXMvY29uZmlybWVkP2Zyb209JyArIHN0YXJ0ZGF0ZSArICcmdG89JyArIGVuZGRhdGUpLnRoZW4ocmVzcG9uc2UgPT4gKHRoaXMuSUQgPSByZXNwb25zZSkpDQogICAgICAgICAgICBhd2FpdCBheGlvcy5nZXQoJ2h0dHBzOi8vYXBpLmNvdmlkMTlhcGkuY29tL3RvdGFsL2NvdW50cnkvJyArICdKUCcgKyAnL3N0YXR1cy9jb25maXJtZWQ/ZnJvbT0nICsgc3RhcnRkYXRlICsgJyZ0bz0nICsgZW5kZGF0ZSkudGhlbihyZXNwb25zZSA9PiAodGhpcy5KUCA9IHJlc3BvbnNlKSkNCiAgICAgICAgICAgIGF3YWl0IGF4aW9zLmdldCgnaHR0cHM6Ly9hcGkuY292aWQxOWFwaS5jb20vdG90YWwvY291bnRyeS8nICsgJ0tSJyArICcvc3RhdHVzL2NvbmZpcm1lZD9mcm9tPScgKyBzdGFydGRhdGUgKyAnJnRvPScgKyBlbmRkYXRlKS50aGVuKHJlc3BvbnNlID0+ICh0aGlzLktSID0gcmVzcG9uc2UpKQ0KICAgICAgICAgICAgYXdhaXQgYXhpb3MuZ2V0KCdodHRwczovL2FwaS5jb3ZpZDE5YXBpLmNvbS90b3RhbC9jb3VudHJ5LycgKyAnTVknICsgJy9zdGF0dXMvY29uZmlybWVkP2Zyb209JyArIHN0YXJ0ZGF0ZSArICcmdG89JyArIGVuZGRhdGUpLnRoZW4ocmVzcG9uc2UgPT4gKHRoaXMuTVkgPSByZXNwb25zZSkpDQogICAgICAgICAgICBhd2FpdCBheGlvcy5nZXQoJ2h0dHBzOi8vYXBpLmNvdmlkMTlhcGkuY29tL3RvdGFsL2NvdW50cnkvJyArICdVUycgKyAnL3N0YXR1cy9jb25maXJtZWQ/ZnJvbT0nICsgc3RhcnRkYXRlICsgJyZ0bz0nICsgZW5kZGF0ZSkudGhlbihyZXNwb25zZSA9PiAodGhpcy5VUyA9IHJlc3BvbnNlKSkNCg0KICAgICAgICB9DQogICAgfSwNCiAgICBtb3VudGVkKCkgew0KICAgICAgICBjb25zb2xlLmxvZyh0aGlzLkFVKQ0KICAgIH0sDQp9DQo="},{"version":3,"sources":["C:\\Users\\david\\Desktop\\git 1\\CovidTravelTracker\\src\\components\\AddDataFS.vue"],"names":[],"mappings":"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AAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC1C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACtD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC5D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACvppK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;gBAChppppK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;QAExK;IACJ,CAAC;IACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;QACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACvB,CAAC;AACL","file":"C:/Users/david/Desktop/git 1/CovidTravelTracker/src/components/AddDataFS.vue","sourceRoot":"","sourcesContent":["<template>\r\n    <button @click=\"fetchCovidCase()\">test</button>\r\n    <div>{{CN.data}}</div>\r\n</template>\r\n<script>\r\nimport axios from 'axios'\r\nimport firebaseApp from '../firebase.js';\r\nimport {getFirestore} from \"firebase/firestore\";\r\nimport {doc, setDoc} from \"firebase/firestore\";\r\nconst db = getFirestore(firebaseApp);\r\n\r\n\r\nexport default {\r\n    name : 'AddDataFS',\r\n    components : {},\r\n    data() {\r\n        return  {\r\n            AU : '',\r\n            CN : '',\r\n            ID : '',\r\n            JP : '',\r\n            KR : '',\r\n            MY : '',\r\n            US : '',\r\n        }\r\n    },\r\n    methods : {\r\n        async  fetchCovidCase() {\r\n            console.log(\"Working\")\r\n            var enddateObj = new Date()\r\n            var startdateObj = new Date(new Date().setDate(enddateObj.getDate()-30));\r\n            var enddate = enddateObj.toISOString();\r\n            var startdate = startdateObj.toISOString();\r\n            enddate = enddate.substring(0, enddate.indexOf('T')+1);\r\n            startdate = startdate.substring(0, startdate.indexOf('T')+1);\r\n            enddate += \"00:00:00Z\"\r\n            startdate += \"00:00:00Z\"\r\n            console.log(startdate, enddate)\r\n            await axios.get('https://api.covid19api.com/total/country/' + 'AU' + '/status/confirmed?from=' + startdate + '&to=' + enddate).then(response => (this.AU = response))\r\n            await axios.get('https://api.covid19api.com/total/country/' + 'CN' + '/status/confirmed?from=' + startdate + '&to=' + enddate).then(response => (this.CN = response))\r\n            this.CN.data.forEach(data => setDoc(doc(db, \"China\", data[\"Date\"]), {\r\n                Country: \"China\", date: data[\"Date\"], Cases: data[\"Cases\"]\r\n            }))\r\n            await axios.get('https://api.covid19api.com/total/country/' + 'ID' + '/status/confirmed?from=' + startdate + '&to=' + enddate).then(response => (this.ID = response))\r\n            await axios.get('https://api.covid19api.com/total/country/' + 'JP' + '/status/confirmed?from=' + startdate + '&to=' + enddate).then(response => (this.JP = response))\r\n            await axios.get('https://api.covid19api.com/total/country/' + 'KR' + '/status/confirmed?from=' + startdate + '&to=' + enddate).then(response => (this.KR = response))\r\n            await axios.get('https://api.covid19api.com/total/country/' + 'MY' + '/status/confirmed?from=' + startdate + '&to=' + enddate).then(response => (this.MY = response))\r\n            await axios.get('https://api.covid19api.com/total/country/' + 'US' + '/status/confirmed?from=' + startdate + '&to=' + enddate).then(response => (this.US = response))\r\n\r\n        }\r\n    },\r\n    mounted() {\r\n        console.log(this.AU)\r\n    },\r\n}\r\n</script>\r\n"]}]}