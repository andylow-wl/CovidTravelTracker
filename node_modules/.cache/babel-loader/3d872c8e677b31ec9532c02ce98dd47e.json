{"remainingRequest":"/Users/dioharyadi/Desktop/BT3103_project/CovidTravelTracker/node_modules/babel-loader/lib/index.js!/Users/dioharyadi/Desktop/BT3103_project/CovidTravelTracker/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/dioharyadi/Desktop/BT3103_project/CovidTravelTracker/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/dioharyadi/Desktop/BT3103_project/CovidTravelTracker/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/dioharyadi/Desktop/BT3103_project/CovidTravelTracker/src/components/AddDataFS.vue?vue&type=template&id=097c99f8","dependencies":[{"path":"/Users/dioharyadi/Desktop/BT3103_project/CovidTravelTracker/src/components/AddDataFS.vue","mtime":1649334685297},{"path":"/Users/dioharyadi/Desktop/BT3103_project/CovidTravelTracker/babel.config.js","mtime":1648925663561},{"path":"/Users/dioharyadi/Desktop/BT3103_project/CovidTravelTracker/node_modules/cache-loader/dist/cjs.js","mtime":1649334884969},{"path":"/Users/dioharyadi/Desktop/BT3103_project/CovidTravelTracker/node_modules/babel-loader/lib/index.js","mtime":1649334887771},{"path":"/Users/dioharyadi/Desktop/BT3103_project/CovidTravelTracker/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1649334889981},{"path":"/Users/dioharyadi/Desktop/BT3103_project/CovidTravelTracker/node_modules/cache-loader/dist/cjs.js","mtime":1649334884969},{"path":"/Users/dioharyadi/Desktop/BT3103_project/CovidTravelTracker/node_modules/vue-loader-v16/dist/index.js","mtime":1649334887567}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgb3BlbkJsb2NrIGFzIF9vcGVuQmxvY2ssIGNyZWF0ZUVsZW1lbnRCbG9jayBhcyBfY3JlYXRlRWxlbWVudEJsb2NrIH0gZnJvbSAidnVlIjsKZXhwb3J0IGZ1bmN0aW9uIHJlbmRlcihfY3R4LCBfY2FjaGUsICRwcm9wcywgJHNldHVwLCAkZGF0YSwgJG9wdGlvbnMpIHsKICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKCJidXR0b24iLCB7CiAgICBvbkNsaWNrOiBfY2FjaGVbMF0gfHwgKF9jYWNoZVswXSA9IGZ1bmN0aW9uICgkZXZlbnQpIHsKICAgICAgcmV0dXJuICRvcHRpb25zLmZldGNoQ292aWRDYXNlKCk7CiAgICB9KQogIH0sICJ0ZXN0Iik7Cn0="},{"version":3,"mappings":";;uBACIA,oBAA+C,QAA/C,EAA+C;AAAtCC,WAAK;AAAA,aAAEC,yBAAF;AAAA;AAAiC,GAA/C,EAAkC,MAAlC","names":["_createElementBlock","onClick","$options"],"sourceRoot":"","sources":["/Users/dioharyadi/Desktop/BT3103_project/CovidTravelTracker/src/components/AddDataFS.vue"],"sourcesContent":["<template>\n    <button @click=\"fetchCovidCase()\">test</button>\n</template>\n<script>\nimport axios from 'axios'\nimport firebaseApp from '../firebase.js';\nimport { getFirestore } from \"firebase/firestore\";\nimport { doc, setDoc } from \"firebase/firestore\";\nconst db = getFirestore(firebaseApp);\nexport default {\n    name : 'AddDataFS',\n    components : {},\n    data() {\n        return  {\n            AU : '',\n            AU_nc : {},\n            CN : '',\n            ID : '',\n            JP : '',\n            KR : '',\n            MY : '',\n            US : '',\n        }\n    },\n    methods : {\n        async  fetchCovidCase() {\n            console.log(\"Working\")\n            var enddateObj = new Date()\n            enddateObj.setHours(8,0,0,0)\n            var startdateObj = new Date(new Date().setDate(enddateObj.getDate()-30))\n            startdateObj.setHours(8,0,0,0)\n            var enddate = enddateObj.toISOString();\n            var startdate = startdateObj.toISOString();\n            console.log(startdate, enddate)\n            await axios.get('https://api.covid19api.com/total/country/' + 'AU' + '/status/confirmed?from=' + startdate + '&to=' + enddate).then(response => (this.AU = response))\n            this.AU.data.forEach(data => setDoc(doc(db, \"Australia\", data[\"Date\"]), {\n                Country: \"Australia\", date: data[\"Date\"], Cases: data[\"Cases\"]\n            }))\n            // const start = startdateObj;\n            // const end = enddateObj;\n            // let loop = new Date(start);\n            // while (loop <= end) {\n            //     console.log(loop.toISOString())\n            //     var loopISO = loop.toISOString()\n            //     this.AU_nc[loopISO] = 0\n            //     let newDate = loop.setDate(loop.getDate() + 1);\n            //     loop = new Date(newDate);\n            // }\n            // this.AU_nc[startdate] = this.AU.data[1]['Cases'] - this.AU.data[0]['Cases']\n            // this.AU_nc[enddate] = this.AU.data[30]['Cases'] - this.AU.data[29]['Cases']\n            // console.log(this.AU_nc)\n            await axios.get('https://api.covid19api.com/total/country/' + 'CN' + '/status/confirmed?from=' + startdate + '&to=' + enddate).then(response => (this.CN = response))\n            this.CN.data.forEach(data => setDoc(doc(db, \"China\", data[\"Date\"]), {\n                Country: \"China\", date: data[\"Date\"], Cases: data[\"Cases\"]\n            }))\n            await axios.get('https://api.covid19api.com/total/country/' + 'ID' + '/status/confirmed?from=' + startdate + '&to=' + enddate).then(response => (this.ID = response))\n            this.ID.data.forEach(data => setDoc(doc(db, \"Indonesia\", data[\"Date\"]), {\n                Country: \"Indonesia\", date: data[\"Date\"], Cases: data[\"Cases\"]\n            }))      \n            await axios.get('https://api.covid19api.com/total/country/' + 'JP' + '/status/confirmed?from=' + startdate + '&to=' + enddate).then(response => (this.JP = response))\n            this.JP.data.forEach(data => setDoc(doc(db, \"Japan\", data[\"Date\"]), {\n                Country: \"Japan\", date: data[\"Date\"], Cases: data[\"Cases\"]\n            }))            \n            await axios.get('https://api.covid19api.com/total/country/' + 'KR' + '/status/confirmed?from=' + startdate + '&to=' + enddate).then(response => (this.KR = response))\n            this.KR.data.forEach(data => setDoc(doc(db, \"South Korea\", data[\"Date\"]), {\n                Country: \"South Korea\", date: data[\"Date\"], Cases: data[\"Cases\"]\n            }))            \n            await axios.get('https://api.covid19api.com/total/country/' + 'MY' + '/status/confirmed?from=' + startdate + '&to=' + enddate).then(response => (this.MY = response))\n            this.MY.data.forEach(data => setDoc(doc(db, \"Malaysia\", data[\"Date\"]), {\n                Country: \"Malaysia\", date: data[\"Date\"], Cases: data[\"Cases\"]\n            }))            \n            await axios.get('https://api.covid19api.com/total/country/' + 'US' + '/status/confirmed?from=' + startdate + '&to=' + enddate).then(response => (this.US = response))\n            this.US.data.forEach(data => setDoc(doc(db, \"USA\", data[\"Date\"]), {\n                Country: \"USA\", date: data[\"Date\"], Cases: data[\"Cases\"]\n            }))\n        }\n    },\n    mounted() {\n        console.log(this.AU)\n    },\n}\n</script>"]}]}