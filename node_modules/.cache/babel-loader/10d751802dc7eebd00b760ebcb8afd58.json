{"remainingRequest":"C:\\Users\\david\\Desktop\\git 1\\CovidTravelTracker\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\david\\Desktop\\git 1\\CovidTravelTracker\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\david\\Desktop\\git 1\\CovidTravelTracker\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\david\\Desktop\\git 1\\CovidTravelTracker\\src\\components\\AddDataFS.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\david\\Desktop\\git 1\\CovidTravelTracker\\src\\components\\AddDataFS.vue","mtime":1649077621919},{"path":"C:\\Users\\david\\Desktop\\git 1\\CovidTravelTracker\\babel.config.js","mtime":1649077539424},{"path":"C:\\Users\\david\\Desktop\\git 1\\CovidTravelTracker\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1649077568757},{"path":"C:\\Users\\david\\Desktop\\git 1\\CovidTravelTracker\\node_modules\\babel-loader\\lib\\index.js","mtime":1649077567659},{"path":"C:\\Users\\david\\Desktop\\git 1\\CovidTravelTracker\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1649077568757},{"path":"C:\\Users\\david\\Desktop\\git 1\\CovidTravelTracker\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1649077618960}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkM6L1VzZXJzL2RhdmlkL0Rlc2t0b3AvZ2l0IDEvQ292aWRUcmF2ZWxUcmFja2VyL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yLmpzIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCBmaXJlYmFzZUFwcCBmcm9tICcuLi9maXJlYmFzZS5qcyc7CmltcG9ydCB7IGdldEZpcmVzdG9yZSB9IGZyb20gImZpcmViYXNlL2ZpcmVzdG9yZSI7CmltcG9ydCB7IGRvYywgc2V0RG9jIH0gZnJvbSAiZmlyZWJhc2UvZmlyZXN0b3JlIjsKdmFyIGRiID0gZ2V0RmlyZXN0b3JlKGZpcmViYXNlQXBwKTsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdBZGREYXRhRlMnLAogIGNvbXBvbmVudHM6IHt9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBBVTogJycsCiAgICAgIENOOiAnJywKICAgICAgSUQ6ICcnLAogICAgICBKUDogJycsCiAgICAgIEtSOiAnJywKICAgICAgTVk6ICcnLAogICAgICBVUzogJycKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBmZXRjaENvdmlkQ2FzZTogZnVuY3Rpb24gZmV0Y2hDb3ZpZENhc2UoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciBlbmRkYXRlT2JqLCBzdGFydGRhdGVPYmosIGVuZGRhdGUsIHN0YXJ0ZGF0ZTsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygiV29ya2luZyIpOwogICAgICAgICAgICAgICAgZW5kZGF0ZU9iaiA9IG5ldyBEYXRlKCk7CiAgICAgICAgICAgICAgICBzdGFydGRhdGVPYmogPSBuZXcgRGF0ZShuZXcgRGF0ZSgpLnNldERhdGUoZW5kZGF0ZU9iai5nZXREYXRlKCkgLSAzMCkpOwogICAgICAgICAgICAgICAgZW5kZGF0ZSA9IGVuZGRhdGVPYmoudG9JU09TdHJpbmcoKTsKICAgICAgICAgICAgICAgIHN0YXJ0ZGF0ZSA9IHN0YXJ0ZGF0ZU9iai50b0lTT1N0cmluZygpOwogICAgICAgICAgICAgICAgZW5kZGF0ZSA9IGVuZGRhdGUuc3Vic3RyaW5nKDAsIGVuZGRhdGUuaW5kZXhPZignVCcpICsgMSk7CiAgICAgICAgICAgICAgICBzdGFydGRhdGUgPSBzdGFydGRhdGUuc3Vic3RyaW5nKDAsIHN0YXJ0ZGF0ZS5pbmRleE9mKCdUJykgKyAxKTsKICAgICAgICAgICAgICAgIGVuZGRhdGUgKz0gIjAwOjAwOjAwWiI7CiAgICAgICAgICAgICAgICBzdGFydGRhdGUgKz0gIjAwOjAwOjAwWiI7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhzdGFydGRhdGUsIGVuZGRhdGUpOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDEyOwogICAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLmdldCgnaHR0cHM6Ly9hcGkuY292aWQxOWFwaS5jb20vdG90YWwvY291bnRyeS8nICsgJ0FVJyArICcvc3RhdHVzL2NvbmZpcm1lZD9mcm9tPScgKyBzdGFydGRhdGUgKyAnJnRvPScgKyBlbmRkYXRlKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMuQVUgPSByZXNwb25zZTsKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDEyOgogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDE0OwogICAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLmdldCgnaHR0cHM6Ly9hcGkuY292aWQxOWFwaS5jb20vdG90YWwvY291bnRyeS8nICsgJ0NOJyArICcvc3RhdHVzL2NvbmZpcm1lZD9mcm9tPScgKyBzdGFydGRhdGUgKyAnJnRvPScgKyBlbmRkYXRlKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMuQ04gPSByZXNwb25zZTsKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDE0OgogICAgICAgICAgICAgICAgX3RoaXMuQ04uZGF0YS5mb3JFYWNoKGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgICAgICAgICAgICAgIHJldHVybiBzZXREb2MoZG9jKGRiLCAiQ2hpbmEiLCBkYXRhWyJEYXRlIl0pLCB7CiAgICAgICAgICAgICAgICAgICAgQ291bnRyeTogIkNoaW5hIiwKICAgICAgICAgICAgICAgICAgICBkYXRlOiBkYXRhWyJEYXRlIl0sCiAgICAgICAgICAgICAgICAgICAgQ2FzZXM6IGRhdGFbIkNhc2VzIl0KICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTc7CiAgICAgICAgICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KCdodHRwczovL2FwaS5jb3ZpZDE5YXBpLmNvbS90b3RhbC9jb3VudHJ5LycgKyAnSUQnICsgJy9zdGF0dXMvY29uZmlybWVkP2Zyb209JyArIHN0YXJ0ZGF0ZSArICcmdG89JyArIGVuZGRhdGUpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgICAgICAgICAgIHJldHVybiBfdGhpcy5JRCA9IHJlc3BvbnNlOwogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMTc6CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTk7CiAgICAgICAgICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KCdodHRwczovL2FwaS5jb3ZpZDE5YXBpLmNvbS90b3RhbC9jb3VudHJ5LycgKyAnSlAnICsgJy9zdGF0dXMvY29uZmlybWVkP2Zyb209JyArIHN0YXJ0ZGF0ZSArICcmdG89JyArIGVuZGRhdGUpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgICAgICAgICAgIHJldHVybiBfdGhpcy5KUCA9IHJlc3BvbnNlOwogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMTk6CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjE7CiAgICAgICAgICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KCdodHRwczovL2FwaS5jb3ZpZDE5YXBpLmNvbS90b3RhbC9jb3VudHJ5LycgKyAnS1InICsgJy9zdGF0dXMvY29uZmlybWVkP2Zyb209JyArIHN0YXJ0ZGF0ZSArICcmdG89JyArIGVuZGRhdGUpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgICAgICAgICAgIHJldHVybiBfdGhpcy5LUiA9IHJlc3BvbnNlOwogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMjE6CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjM7CiAgICAgICAgICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KCdodHRwczovL2FwaS5jb3ZpZDE5YXBpLmNvbS90b3RhbC9jb3VudHJ5LycgKyAnTVknICsgJy9zdGF0dXMvY29uZmlybWVkP2Zyb209JyArIHN0YXJ0ZGF0ZSArICcmdG89JyArIGVuZGRhdGUpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgICAgICAgICAgIHJldHVybiBfdGhpcy5NWSA9IHJlc3BvbnNlOwogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMjM6CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjU7CiAgICAgICAgICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KCdodHRwczovL2FwaS5jb3ZpZDE5YXBpLmNvbS90b3RhbC9jb3VudHJ5LycgKyAnVVMnICsgJy9zdGF0dXMvY29uZmlybWVkP2Zyb209JyArIHN0YXJ0ZGF0ZSArICcmdG89JyArIGVuZGRhdGUpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgICAgICAgICAgIHJldHVybiBfdGhpcy5VUyA9IHJlc3BvbnNlOwogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMjU6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgfSkpKCk7CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgY29uc29sZS5sb2codGhpcy5BVSk7CiAgfQp9Ow=="},{"version":3,"mappings":"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","names":["axios","firebaseApp","getFirestore","doc","setDoc","db","name","components","data","AU","CN","ID","JP","KR","MY","US","methods","fetchCovidCase","console","log","enddateObj","Date","startdateObj","setDate","getDate","enddate","toISOString","startdate","substring","indexOf","get","then","response","forEach","Country","date","Cases","mounted"],"sourceRoot":"","sources":["C:\\Users\\david\\Desktop\\git 1\\CovidTravelTracker\\src\\components\\AddDataFS.vue"],"sourcesContent":["<template>\r\n    <button @click=\"fetchCovidCase()\">test</button>\r\n    <div>{{CN.data}}</div>\r\n</template>\r\n<script>\r\nimport axios from 'axios'\r\nimport firebaseApp from '../firebase.js';\r\nimport {getFirestore} from \"firebase/firestore\";\r\nimport {doc, setDoc} from \"firebase/firestore\";\r\nconst db = getFirestore(firebaseApp);\r\n\r\n\r\nexport default {\r\n    name : 'AddDataFS',\r\n    components : {},\r\n    data() {\r\n        return  {\r\n            AU : '',\r\n            CN : '',\r\n            ID : '',\r\n            JP : '',\r\n            KR : '',\r\n            MY : '',\r\n            US : '',\r\n        }\r\n    },\r\n    methods : {\r\n        async  fetchCovidCase() {\r\n            console.log(\"Working\")\r\n            var enddateObj = new Date()\r\n            var startdateObj = new Date(new Date().setDate(enddateObj.getDate()-30));\r\n            var enddate = enddateObj.toISOString();\r\n            var startdate = startdateObj.toISOString();\r\n            enddate = enddate.substring(0, enddate.indexOf('T')+1);\r\n            startdate = startdate.substring(0, startdate.indexOf('T')+1);\r\n            enddate += \"00:00:00Z\"\r\n            startdate += \"00:00:00Z\"\r\n            console.log(startdate, enddate)\r\n            await axios.get('https://api.covid19api.com/total/country/' + 'AU' + '/status/confirmed?from=' + startdate + '&to=' + enddate).then(response => (this.AU = response))\r\n            await axios.get('https://api.covid19api.com/total/country/' + 'CN' + '/status/confirmed?from=' + startdate + '&to=' + enddate).then(response => (this.CN = response))\r\n            this.CN.data.forEach(data => setDoc(doc(db, \"China\", data[\"Date\"]), {\r\n                Country: \"China\", date: data[\"Date\"], Cases: data[\"Cases\"]\r\n            }))\r\n            await axios.get('https://api.covid19api.com/total/country/' + 'ID' + '/status/confirmed?from=' + startdate + '&to=' + enddate).then(response => (this.ID = response))\r\n            await axios.get('https://api.covid19api.com/total/country/' + 'JP' + '/status/confirmed?from=' + startdate + '&to=' + enddate).then(response => (this.JP = response))\r\n            await axios.get('https://api.covid19api.com/total/country/' + 'KR' + '/status/confirmed?from=' + startdate + '&to=' + enddate).then(response => (this.KR = response))\r\n            await axios.get('https://api.covid19api.com/total/country/' + 'MY' + '/status/confirmed?from=' + startdate + '&to=' + enddate).then(response => (this.MY = response))\r\n            await axios.get('https://api.covid19api.com/total/country/' + 'US' + '/status/confirmed?from=' + startdate + '&to=' + enddate).then(response => (this.US = response))\r\n\r\n        }\r\n    },\r\n    mounted() {\r\n        console.log(this.AU)\r\n    },\r\n}\r\n</script>\r\n"]}]}