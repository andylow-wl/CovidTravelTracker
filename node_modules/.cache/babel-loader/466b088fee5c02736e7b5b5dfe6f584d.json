{"remainingRequest":"C:\\Users\\andyl\\Desktop\\bt3103\\CovidTravelTracker\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\andyl\\Desktop\\bt3103\\CovidTravelTracker\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\andyl\\Desktop\\bt3103\\CovidTravelTracker\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\andyl\\Desktop\\bt3103\\CovidTravelTracker\\src\\components\\AddDataFS.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\andyl\\Desktop\\bt3103\\CovidTravelTracker\\src\\components\\AddDataFS.vue","mtime":1649502992778},{"path":"C:\\Users\\andyl\\Desktop\\bt3103\\CovidTravelTracker\\babel.config.js","mtime":1649502970773},{"path":"C:\\Users\\andyl\\Desktop\\bt3103\\CovidTravelTracker\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1649502977050},{"path":"C:\\Users\\andyl\\Desktop\\bt3103\\CovidTravelTracker\\node_modules\\babel-loader\\lib\\index.js","mtime":1649502976777},{"path":"C:\\Users\\andyl\\Desktop\\bt3103\\CovidTravelTracker\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1649502977050},{"path":"C:\\Users\\andyl\\Desktop\\bt3103\\CovidTravelTracker\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1649502991907}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":"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","names":["axios","firebaseApp","getFirestore","doc","setDoc","db","name","components","data","AU","CN","ID","JP","KR","MY","US","methods","fetchCovidCase","console","log","enddateObj","Date","setHours","startdateObj","setDate","getDate","enddate","toISOString","startdate","get","then","response","forEach","Country","date","Cases","mounted"],"sourceRoot":"","sources":["C:\\Users\\andyl\\Desktop\\bt3103\\CovidTravelTracker\\src\\components\\AddDataFS.vue"],"sourcesContent":["<template>\r\n    <!--<button @click=\"fetchCovidCase()\">Update Charts</button>-->\r\n    <div></div>\r\n</template>\r\n<script>\r\nimport axios from 'axios'\r\nimport firebaseApp from '../firebase.js';\r\nimport { getFirestore } from \"firebase/firestore\";\r\nimport { doc, setDoc } from \"firebase/firestore\";\r\nconst db = getFirestore(firebaseApp);\r\nexport default {\r\n    name : 'AddDataFS',\r\n    components : {},\r\n    data() {\r\n        return  {\r\n            AU : '',\r\n            CN : '',\r\n            ID : '',\r\n            JP : '',\r\n            KR : '',\r\n            MY : '',\r\n            US : '',\r\n        }\r\n    },\r\n    methods : {\r\n        async  fetchCovidCase() {\r\n            console.log(\"Working\")\r\n            var enddateObj = new Date()\r\n            enddateObj.setHours(8,0,0,0)\r\n            var startdateObj = new Date(new Date().setDate(enddateObj.getDate()-30))\r\n            startdateObj.setHours(8,0,0,0)\r\n            var enddate = enddateObj.toISOString();\r\n            var startdate = startdateObj.toISOString();\r\n            console.log(startdate, enddate)\r\n            await axios.get('https://api.covid19api.com/total/country/' + 'AU' + '/status/confirmed?from=' + startdate + '&to=' + enddate).then(response => (this.AU = response))\r\n            this.AU.data.forEach(data => setDoc(doc(db, \"Australia\", data[\"Date\"]), {\r\n                Country: \"Australia\", date: data[\"Date\"], Cases: data[\"Cases\"]\r\n            }))\r\n            // const start = startdateObj;\r\n            // const end = enddateObj;\r\n            // let loop = new Date(start);\r\n            // while (loop <= end) {\r\n            //     console.log(loop.toISOString())\r\n            //     var loopISO = loop.toISOString()\r\n            //     this.AU_nc[loopISO] = 0\r\n            //     let newDate = loop.setDate(loop.getDate() + 1);\r\n            //     loop = new Date(newDate);\r\n            // }\r\n            // this.AU_nc[startdate] = this.AU.data[1]['Cases'] - this.AU.data[0]['Cases']\r\n            // this.AU_nc[enddate] = this.AU.data[30]['Cases'] - this.AU.data[29]['Cases']\r\n            // console.log(this.AU_nc)\r\n            await axios.get('https://api.covid19api.com/total/country/' + 'CN' + '/status/confirmed?from=' + startdate + '&to=' + enddate).then(response => (this.CN = response))\r\n            this.CN.data.forEach(data => setDoc(doc(db, \"China\", data[\"Date\"]), {\r\n                Country: \"China\", date: data[\"Date\"], Cases: data[\"Cases\"]\r\n            }))\r\n            await axios.get('https://api.covid19api.com/total/country/' + 'ID' + '/status/confirmed?from=' + startdate + '&to=' + enddate).then(response => (this.ID = response))\r\n            this.ID.data.forEach(data => setDoc(doc(db, \"Indonesia\", data[\"Date\"]), {\r\n                Country: \"Indonesia\", date: data[\"Date\"], Cases: data[\"Cases\"]\r\n            }))      \r\n            await axios.get('https://api.covid19api.com/total/country/' + 'JP' + '/status/confirmed?from=' + startdate + '&to=' + enddate).then(response => (this.JP = response))\r\n            this.JP.data.forEach(data => setDoc(doc(db, \"Japan\", data[\"Date\"]), {\r\n                Country: \"Japan\", date: data[\"Date\"], Cases: data[\"Cases\"]\r\n            }))            \r\n            await axios.get('https://api.covid19api.com/total/country/' + 'KR' + '/status/confirmed?from=' + startdate + '&to=' + enddate).then(response => (this.KR = response))\r\n            this.KR.data.forEach(data => setDoc(doc(db, \"Korea\", data[\"Date\"]), {\r\n                Country: \"South Korea\", date: data[\"Date\"], Cases: data[\"Cases\"]\r\n            }))            \r\n            await axios.get('https://api.covid19api.com/total/country/' + 'MY' + '/status/confirmed?from=' + startdate + '&to=' + enddate).then(response => (this.MY = response))\r\n            this.MY.data.forEach(data => setDoc(doc(db, \"Malaysia\", data[\"Date\"]), {\r\n                Country: \"Malaysia\", date: data[\"Date\"], Cases: data[\"Cases\"]\r\n            }))            \r\n            await axios.get('https://api.covid19api.com/total/country/' + 'US' + '/status/confirmed?from=' + startdate + '&to=' + enddate).then(response => (this.US = response))\r\n            this.US.data.forEach(data => setDoc(doc(db, \"United States\", data[\"Date\"]), {\r\n                Country: \"USA\", date: data[\"Date\"], Cases: data[\"Cases\"]\r\n            }))\r\n        }\r\n    },\r\n    mounted() {\r\n    },\r\n}\r\n</script>"]}]}