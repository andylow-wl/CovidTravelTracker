{"remainingRequest":"C:\\Users\\andyl\\Desktop\\bt3103\\CovidTravelTracker\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\andyl\\Desktop\\bt3103\\CovidTravelTracker\\node_modules\\vue-loader-v16\\dist\\templateLoader.js??ref--6!C:\\Users\\andyl\\Desktop\\bt3103\\CovidTravelTracker\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\andyl\\Desktop\\bt3103\\CovidTravelTracker\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\andyl\\Desktop\\bt3103\\CovidTravelTracker\\src\\components\\SearchAutocomplete.vue?vue&type=template&id=529fd040","dependencies":[{"path":"C:\\Users\\andyl\\Desktop\\bt3103\\CovidTravelTracker\\src\\components\\SearchAutocomplete.vue","mtime":1649560635051},{"path":"C:\\Users\\andyl\\Desktop\\bt3103\\CovidTravelTracker\\babel.config.js","mtime":1649502970773},{"path":"C:\\Users\\andyl\\Desktop\\bt3103\\CovidTravelTracker\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1649502977050},{"path":"C:\\Users\\andyl\\Desktop\\bt3103\\CovidTravelTracker\\node_modules\\babel-loader\\lib\\index.js","mtime":1649502976777},{"path":"C:\\Users\\andyl\\Desktop\\bt3103\\CovidTravelTracker\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1649502991917},{"path":"C:\\Users\\andyl\\Desktop\\bt3103\\CovidTravelTracker\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1649502977050},{"path":"C:\\Users\\andyl\\Desktop\\bt3103\\CovidTravelTracker\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1649502991907}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc2VhcmNoLmpzIjsKaW1wb3J0IHsgdk1vZGVsVGV4dCBhcyBfdk1vZGVsVGV4dCwgd2l0aEtleXMgYXMgX3dpdGhLZXlzLCBjcmVhdGVFbGVtZW50Vk5vZGUgYXMgX2NyZWF0ZUVsZW1lbnRWTm9kZSwgd2l0aERpcmVjdGl2ZXMgYXMgX3dpdGhEaXJlY3RpdmVzLCBvcGVuQmxvY2sgYXMgX29wZW5CbG9jaywgY3JlYXRlRWxlbWVudEJsb2NrIGFzIF9jcmVhdGVFbGVtZW50QmxvY2ssIGNyZWF0ZUNvbW1lbnRWTm9kZSBhcyBfY3JlYXRlQ29tbWVudFZOb2RlLCByZW5kZXJMaXN0IGFzIF9yZW5kZXJMaXN0LCBGcmFnbWVudCBhcyBfRnJhZ21lbnQsIHRvRGlzcGxheVN0cmluZyBhcyBfdG9EaXNwbGF5U3RyaW5nLCBub3JtYWxpemVDbGFzcyBhcyBfbm9ybWFsaXplQ2xhc3MsIHZTaG93IGFzIF92U2hvdyB9IGZyb20gInZ1ZSI7CnZhciBfaG9pc3RlZF8xID0gewogIGNsYXNzOiAiYXV0b2NvbXBsZXRlIgp9Owp2YXIgX2hvaXN0ZWRfMiA9IHsKICBpZDogImF1dG9jb21wbGV0ZS1yZXN1bHRzIiwKICBjbGFzczogImF1dG9jb21wbGV0ZS1yZXN1bHRzIgp9Owp2YXIgX2hvaXN0ZWRfMyA9IHsKICBrZXk6IDAsCiAgY2xhc3M6ICJsb2FkaW5nIgp9Owp2YXIgX2hvaXN0ZWRfNCA9IFsib25DbGljayJdOwpleHBvcnQgZnVuY3Rpb24gcmVuZGVyKF9jdHgsIF9jYWNoZSwgJHByb3BzLCAkc2V0dXAsICRkYXRhLCAkb3B0aW9ucykgewogIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVFbGVtZW50QmxvY2soImRpdiIsIF9ob2lzdGVkXzEsIFtfd2l0aERpcmVjdGl2ZXMoX2NyZWF0ZUVsZW1lbnRWTm9kZSgiaW5wdXQiLCB7CiAgICB0eXBlOiAidGV4dCIsCiAgICBwbGFjZWhvbGRlcjogIkRlc3RpbmF0aW9uIENvdW50cnkiLAogICAgcmVxdWlyZWQ6ICIiLAogICAgb25JbnB1dDogX2NhY2hlWzBdIHx8IChfY2FjaGVbMF0gPSBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiAkb3B0aW9ucy5vbkNoYW5nZSAmJiAkb3B0aW9ucy5vbkNoYW5nZS5hcHBseSgkb3B0aW9ucywgYXJndW1lbnRzKTsKICAgIH0pLAogICAgIm9uVXBkYXRlOm1vZGVsVmFsdWUiOiBfY2FjaGVbMV0gfHwgKF9jYWNoZVsxXSA9IGZ1bmN0aW9uICgkZXZlbnQpIHsKICAgICAgcmV0dXJuICRkYXRhLnNlYXJjaCA9ICRldmVudDsKICAgIH0pLAogICAgb25LZXlkb3duOiBbX2NhY2hlWzJdIHx8IChfY2FjaGVbMl0gPSBfd2l0aEtleXMoZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gJG9wdGlvbnMub25BcnJvd0Rvd24gJiYgJG9wdGlvbnMub25BcnJvd0Rvd24uYXBwbHkoJG9wdGlvbnMsIGFyZ3VtZW50cyk7CiAgICB9LCBbImRvd24iXSkpLCBfY2FjaGVbM10gfHwgKF9jYWNoZVszXSA9IF93aXRoS2V5cyhmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiAkb3B0aW9ucy5vbkFycm93VXAgJiYgJG9wdGlvbnMub25BcnJvd1VwLmFwcGx5KCRvcHRpb25zLCBhcmd1bWVudHMpOwogICAgfSwgWyJ1cCJdKSksIF9jYWNoZVs0XSB8fCAoX2NhY2hlWzRdID0gX3dpdGhLZXlzKGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuICRvcHRpb25zLm9uRW50ZXIgJiYgJG9wdGlvbnMub25FbnRlci5hcHBseSgkb3B0aW9ucywgYXJndW1lbnRzKTsKICAgIH0sIFsiZW50ZXIiXSkpXQogIH0sIG51bGwsIDU0NAogIC8qIEhZRFJBVEVfRVZFTlRTLCBORUVEX1BBVENIICovCiAgKSwgW1tfdk1vZGVsVGV4dCwgJGRhdGEuc2VhcmNoXV0pLCBfd2l0aERpcmVjdGl2ZXMoX2NyZWF0ZUVsZW1lbnRWTm9kZSgidWwiLCBfaG9pc3RlZF8yLCBbJGRhdGEuaXNMb2FkaW5nID8gKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUVsZW1lbnRCbG9jaygibGkiLCBfaG9pc3RlZF8zLCAiIExvYWRpbmcgcmVzdWx0cy4uLiAiKSkgOiAoX29wZW5CbG9jayh0cnVlKSwgX2NyZWF0ZUVsZW1lbnRCbG9jayhfRnJhZ21lbnQsIHsKICAgIGtleTogMQogIH0sIF9yZW5kZXJMaXN0KCRkYXRhLnJlc3VsdHMsIGZ1bmN0aW9uIChyZXN1bHQsIGkpIHsKICAgIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVFbGVtZW50QmxvY2soImxpIiwgewogICAgICBrZXk6IGksCiAgICAgIG9uQ2xpY2s6IGZ1bmN0aW9uIG9uQ2xpY2soJGV2ZW50KSB7CiAgICAgICAgcmV0dXJuICRvcHRpb25zLnNldFJlc3VsdChyZXN1bHQpOwogICAgICB9LAogICAgICBjbGFzczogX25vcm1hbGl6ZUNsYXNzKFsiYXV0b2NvbXBsZXRlLXJlc3VsdCIsIHsKICAgICAgICAnaXMtYWN0aXZlJzogaSA9PT0gJGRhdGEuYXJyb3dDb3VudGVyCiAgICAgIH1dKQogICAgfSwgX3RvRGlzcGxheVN0cmluZyhyZXN1bHQpLCAxMQogICAgLyogVEVYVCwgQ0xBU1MsIFBST1BTICovCiAgICAsIF9ob2lzdGVkXzQpOwogIH0pLCAxMjgKICAvKiBLRVlFRF9GUkFHTUVOVCAqLwogICkpXSwgNTEyCiAgLyogTkVFRF9QQVRDSCAqLwogICksIFtbX3ZTaG93LCAkZGF0YS5pc09wZW5dXSldKTsKfQ=="},{"version":3,"mappings":";;;;AACOA,OAAK,EAAC;;;AAYPC,IAAE,EAAC;AAEHD,OAAK,EAAC;;;;AAGJA,OAAK,EAAC;;;;uBAjBZE,oBAiCM,KAjCN,cAiCM,iBAhCJC,oBASE,OATF,EASE;AARAC,QAAI,EAAC,MAQL;AAPAC,eAAW,EAAC,qBAOZ;AANAC,YAAQ,EAAC,EAMT;AALCC,WAAK;AAAA,aAAEC,iEAAF;AAAA,MAKN;;aAJSC,eAAMC;MAIf;AAHCC,aAAO;aAAOH;OAAW,UAAlB;aACKA;OAAS,QADd;aAEQA;OAAO,WAFf;AAGR,GATF;;AAAA,oBAKWC,eA2BP,kBAtBJN,oBAqBK,IArBL,cAqBK,CAdKM,iCAFRP,oBAKK,IALL,cAGC,sBAHD,wBAMAA,oBASKU,SATL,EASK;AAAAC;AAAA,GATL,EASKC,YAPmBL,aAOnB,EAP0B,UAArBM,MAAqB,EAAbC,CAAa,EAAZ;yBAFnBd,oBASK,IATL,EASK;AANFW,SAAG,EAAEG,CAMH;AALFC,aAAK;AAAA,eAAET,mBAAUO,MAAV,CAAF;AAAA,OAKH;AAJHf,WAAK,mBAAC,qBAAD,EAAsB;AAAA,qBACJgB,CAAC,KAAKP;AADF,OAAtB;AAIF,KATL,mBAQKM,OARL,EAQW;AAAA;AARX,MAQWG,UARX;GASK,CATL;;AAAA,IAUG,CArBL;;AAAA,eAEUT,eAoBN,CAjCN","names":["class","id","_createElementBlock","_createElementVNode","type","placeholder","required","onInput","$options","$data","$event","onKeydown","_Fragment","key","_renderList","result","i","onClick","_hoisted_4"],"sourceRoot":"","sources":["C:\\Users\\andyl\\Desktop\\bt3103\\CovidTravelTracker\\src\\components\\SearchAutocomplete.vue"],"sourcesContent":["<template>\r\n  <div class=\"autocomplete\">\r\n    <input\r\n      type=\"text\"\r\n      placeholder=\"Destination Country\"\r\n      required=\"\"\r\n      @input=\"onChange\"\r\n      v-model=\"search\"\r\n      @keydown.down=\"onArrowDown\"\r\n      @keydown.up=\"onArrowUp\"\r\n      @keydown.enter=\"onEnter\"\r\n    />\r\n    <ul\r\n      id=\"autocomplete-results\"\r\n      v-show=\"isOpen\"\r\n      class=\"autocomplete-results\"\r\n    >\r\n      <li\r\n        class=\"loading\"\r\n        v-if=\"isLoading\"\r\n      >\r\n        Loading results...\r\n      </li>\r\n      <li\r\n        v-else\r\n        v-for=\"(result, i) in results\"\r\n        :key=\"i\"\r\n        @click=\"setResult(result)\"\r\n        class=\"autocomplete-result\"\r\n        :class=\"{ 'is-active': i === arrowCounter }\"\r\n      >\r\n        {{ result }}\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    name: 'SearchAutocomplete',\r\n    props: {\r\n      items: {\r\n        type: Array,\r\n        required: false,\r\n        default: () => [\r\n        'Australia',\r\n        'China',\r\n        'Indonesia',\r\n        'Japan',\r\n        'Korea',\r\n        'Malaysia',\r\n        'United States'\r\n        ],\r\n      },\r\n      isAsync: {\r\n        type: Boolean,\r\n        required: false,\r\n        default: false,\r\n      },\r\n    },\r\n    data() {\r\n      return {\r\n        isOpen: false,\r\n        results: [],\r\n        search: '',\r\n        isLoading: false,\r\n        arrowCounter: 0,\r\n      };\r\n    },\r\n    watch: {\r\n      items: function (value, oldValue) {\r\n        if (value.length !== oldValue.length) {\r\n          this.results = value;\r\n          this.isLoading = false;\r\n        }\r\n      },\r\n    },\r\n    mounted() {\r\n      document.addEventListener('click', this.handleClickOutside)\r\n    },\r\n    unmounted() {\r\n      document.removeEventListener('click', this.handleClickOutside)\r\n    },\r\n    methods: {\r\n      setResult(result) {\r\n        this.search = result;\r\n        this.isOpen = false;\r\n        this.$emit('selected', result)\r\n      },\r\n      filterResults() {\r\n        this.results = this.items.filter((item) => {\r\n          return item.toLowerCase().indexOf(this.search.toLowerCase()) > -1;\r\n        });\r\n      },\r\n      onChange() {\r\n        this.$emit('input', this.search);\r\n\r\n        if (this.isAsync) {\r\n          this.isLoading = true;\r\n        } else {\r\n          this.filterResults();\r\n          this.isOpen = true;\r\n        }\r\n      },\r\n      handleClickOutside(event) {\r\n        if (!this.$el.contains(event.target)) {\r\n          this.isOpen = false;\r\n          this.arrowCounter = -1;\r\n        }\r\n      },\r\n      onArrowDown() {\r\n        if (this.arrowCounter < this.results.length - 1) {\r\n          this.arrowCounter = this.arrowCounter + 1;\r\n        } else {\r\n            this.arrowCounter = 0;\r\n        }\r\n      },\r\n      onArrowUp() {\r\n          if(this.arrowCounter >= 1) {\r\n              this.arrowCounter = this.arrowCounter - 1;\r\n          } else {\r\n              this.arrowCounter = this.results.length - 1;\r\n          }\r\n      },\r\n      onEnter() {\r\n        this.search = this.results[this.arrowCounter];\r\n        this.isOpen = false;\r\n        this.arrowCounter = -1;\r\n      },\r\n    },\r\n  };\r\n</script>\r\n\r\n<style>\r\n  .autocomplete {\r\n    position: relative;\r\n  }\r\n\r\n  .autocomplete-results {\r\n    padding: 0;\r\n    margin: 0;\r\n    border: 1px solid #eeeeee;\r\n    height: 120px;\r\n    overflow: auto;\r\n  }\r\n\r\n  .autocomplete-result {\r\n    list-style: none;\r\n    text-align: left;\r\n    padding: 4px 2px;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .autocomplete-result.is-active,\r\n  .autocomplete-result:hover {\r\n    background-color: #F28C28;\r\n    color: black;\r\n  }\r\n</style>"]}]}